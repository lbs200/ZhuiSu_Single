@model LinqModel.Products

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutPageManage.cshtml";
}
 

<script src="jquery.form.js" type="text/javascript"></script>
<script language="javascript" src="../../Scripts/uploadPreview.js"></script>
<script src="../../ckeditor/ckeditor.js" type="text/javascript"></script>
<script src="../../ckfinder/ckfinder.js" type="text/javascript"></script>
<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN SAMPLE FORM PORTLET-->

        <div class="portlet box grey tabbable">
            <div class="portlet-title">

                <div class="caption">

                    <i class="icon-reorder"></i>

                    <span class="hidden-480">编辑</span>

                </div>

            </div>
            <div class="portlet-body form">

                <div class="tabbable portlet-tabs">

                    <ul class="nav nav-tabs">

                        <li class="active"><a href="#portlet_tab1" data-toggle="tab">产品</a></li>

                    </ul>

                    <div class="tab-content">

                        <div class="tab-pane active" id="portlet_tab1">
                            <!-- BEGIN FORM-->
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                <form action="#" class="form-horizontal">
                                    <h4>产品</h4>
                                    <hr />
                                    @Html.ValidationSummary(true)
                                    @Html.HiddenFor(model => model.ID)
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.Org_ID, "所属机构：", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="controls">
                                            @Html.DropDownListFor(model => model.Org_ID, new DAL.Organization().GetDropdownlistItemwithid(Convert.ToInt32( Model.Org_ID)))
                                            @Html.ValidationMessage("Org_ID", new { @style = "color: #f70e0e;" })


                                            <span class="help-inline"></span>
                                        </div>
                                    </div>
                                    <div class="control-group">

                                        @Html.LabelFor(model => model.Name, "产品名称", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Name)
                                            @Html.ValidationMessage("Name", new { @style = "color: #f70e0e;" })

                                        </div>

                                    </div>
                                    <div class="control-group">

                                        @Html.LabelFor(model => model.Abbr, "产品缩写", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Abbr)
                                            @Html.ValidationMessage("Abbr", new { @style = "color: #f70e0e;" })


                                        </div>

                                    </div>
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.Prod_Category, "产品类别：", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="controls">
                                            @Html.DropDownListFor(model => model.Prod_Category, new DAL.Pro_Category().GetDropdownlistItemwithid(Convert.ToInt32( Model.Prod_Category)))
                                            @Html.ValidationMessage("Prod_Category", new { @style = "color: #f70e0e;" })


                                            <span class="help-inline"></span>
                                        </div>
                                    </div>
                                   

                                    <div class="control-group hidden">
                                        @Html.LabelFor(model => model.Class, "产品等级", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Class)
                                           
                                        </div>
                                    </div>

                                    <div class="control-group hidden">
                                        @Html.LabelFor(model => model.Spec, "产品规格", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Spec)
                                          
                                        </div>
                                    </div>

                                    <div class="control-group hidden">
                                        @Html.LabelFor(model => model.Unit, "产品单位", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Unit)
                                            
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.material, "主副原料", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.material)
                                            @Html.ValidationMessageFor(model => model.material)
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.Company, "生产机构", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.Company, new DAL.Organization().GetDropdownlistItemwithid(Convert.ToInt32( Model.Company)))
                                            @Html.ValidationMessage("Company", new { @style = "color: #f70e0e;" })




                                        </div>
                                    </div>

                                    <div class="control-group hidden">
                                        @Html.LabelFor(model => model.NET, "净重", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.NET)
                                            
                                        </div>
                                    </div>

                                    <div class="control-group hidden">
                                        @Html.LabelFor(model => model.Count, "数量或度量", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Count)
                                           
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.Description, "产品描述", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <textarea id="Description" name="Description">@Model.Description</textarea>

                                            <script type="text/javascript">
                                                var editor = CKEDITOR.replace('Description');
                                                CKFinder.SetupCKEditor(editor, '/ckfinder/');

                                            </script>

                                            @Html.ValidationMessageFor(model => model.Description)
                                        </div>
                                    </div>

                                    <div class="control-group hidden">
                                        @Html.LabelFor(model => model.Adv_Code, "宣传码", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">

                                            <input id="Adv_Code" name="Adv_Code" type="text" class="uneditable-input" readonly="readonly" value="@Model.Adv_Code" />
                                          
                                            @Html.ValidationMessageFor(model => model.Adv_Code)
                                        </div>
                                    </div>
                                   
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.EWMUrl, "产品宣传页面网址", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">

                                            <input id="EWMUrl" name="EWMUrl" type="text"  value="@Model.EWMUrl" />
                                            全地址以‘http://’或者‘https://’开头
                                            @Html.ValidationMessageFor(model => model.EWMUrl)
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.BuyUrl, "电商购买页面网址", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">

                                            <input id="BuyUrl" name="BuyUrl" type="text" value="@Model.BuyUrl" />
                                            全地址以‘http://’或者‘https://’开头
                                            @Html.ValidationMessageFor(model => model.BuyUrl)
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.VideoUrl, "实时视频播放地址", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">

                                            <input id="VideoUrl" name="VideoUrl" type="text" value="@Model.VideoUrl" />
                                            全地址以‘http://’或者‘https://’开头
                                            @Html.ValidationMessageFor(model => model.VideoUrl)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="保存" onclick="return CheckClick();" class="btn btn-default" />
                                        </div>
                                    </div>
                                </form>
                            }
                            <!-- END FORM-->
                        </div>

                    </div>

                </div>

            </div>

        </div>

        <!-- END SAMPLE FORM PORTLET-->


    </div>
</div>
<div>
    @Html.ActionLink("返回列表", "Index")
</div>
<script type="text/javascript">
    function GetZIP(obj) {

        document.getElementById("ZIPID").value = obj;
        if (obj != "*") {
            $.get("/ManageOrganizations/GetZIP?cid=" + obj, function (data, textStatus) {
                //alert("11");

                $.each(data, function () {
                    document.getElementById("ZIPID").value = this["ZIP"];
                });
                //$.get("/ManageUserPermissions/GetAllP?rid=" + BidCategory, function (data, textStatus) {
                //    $.each(data, function () {
                //        $("input[id='checkb_" + this['PermissionID'] + "']").attr("checked", true);
                //    });
                //});
            });
        }
    }
    function Shengcheng(obj) {

        document.getElementById("Org_Code").value = "i1" + obj +"-"+ document.getElementById("ZIPID").value + document.getElementById("LSH").value;
    }
    function GetAddressShi(obj) {

        document.getElementById("shengID").value = obj;
        if (obj != "*") {
            $.get("/ManageOrganizations/GetP?cid=" + obj, function (data, textStatus) {
                //alert("11");


                var sid = document.getElementById("City");
                $("#City").empty();
                sid.options[sid.options.length] = new Option("---请选择---", "*");
                $.each(data, function () {
                    sid.options[sid.options.length] = new Option(this["Province"], this["ID"]);
                });
                //$.get("/ManageUserPermissions/GetAllP?rid=" + BidCategory, function (data, textStatus) {
                //    $.each(data, function () {
                //        $("input[id='checkb_" + this['PermissionID'] + "']").attr("checked", true);
                //    });
                //});
            });
        }
    }
    function GetXian(obj) {
        document.getElementById("shiID").value = obj;
        if (obj != "*") {
            $.get("/ManageOrganizations/GetP?cid=" + obj, function (data, textStatus) {
                //alert("11");

                var sid = document.getElementById("District");
                $("#District").empty();
                sid.options[sid.options.length] = new Option("---请选择---", "*");
                $.each(data, function () {
                    sid.options[sid.options.length] = new Option(this["Province"], this["ID"]);
                });
                //$.get("/ManageUserPermissions/GetAllP?rid=" + BidCategory, function (data, textStatus) {
                //    $.each(data, function () {
                //        $("input[id='checkb_" + this['PermissionID'] + "']").attr("checked", true);
                //    });
                //});
            });
        }

    }
    function CheckClick() {
        if (document.getElementById("Org_ID").value == "-1") {
            document.getElementById("Org_ID").focus();
            alert("请选择机构名称！");
            return false;
        }
        if (document.getElementById("Name").value == "") {
            document.getElementById("Name").focus();
            alert("请输入名称！");
            return false;
        }
        if (document.getElementById("Abbr").value == "") {
            document.getElementById("Abbr").focus();
            alert("请输入产品英文缩写！");
            return false;
        }
        if (document.getElementById("Company").value == "-1") {
            document.getElementById("Company").focus();
            alert("请选择生产机构！");
            return false;
        }
        if (document.getElementById("EWMUrl").value != "") {
            if (document.getElementById("EWMUrl").value.substring(0, 7) == "http://" || document.getElementById("EWMUrl").value.substring(0, 8) == "https://") {
            }
            else {
                document.getElementById("EWMUrl").focus();
                alert("产品宣传页面网址格式不正确！");
                return false;
            }
        }
        if (document.getElementById("BuyUrl").value != "") {
            if (document.getElementById("BuyUrl").value.substring(0, 7) == "http://" || document.getElementById("BuyUrl").value.substring(0, 8) == "https://") {
            }
            else {
                document.getElementById("BuyUrl").focus();
                alert("电商购买页面网址格式不正确！");
                return false;
            }
        }
        if (document.getElementById("VideoUrl").value != "") {
            if (document.getElementById("VideoUrl").value.substring(0, 7) == "http://" || document.getElementById("VideoUrl").value.substring(0, 8) == "https://") {
            }
            else {
                document.getElementById("VideoUrl").focus();
                alert("实时视频播放地址格式不正确！");
                return false;
            }
        }
        return true;
    }

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}