@model LinqModel.Products

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_LayoutPageManage.cshtml";
}


<script src="jquery.form.js" type="text/javascript"></script>
<script language="javascript" src="../../Scripts/uploadPreview.js"></script>
<script src="../../ckeditor/ckeditor.js" type="text/javascript"></script>
<script src="../../ckfinder/ckfinder.js" type="text/javascript"></script>
<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN SAMPLE FORM PORTLET-->

        <div class="portlet box grey tabbable">
            <div class="portlet-title">

                <div class="caption">

                    <i class="icon-reorder"></i>

                    <span class="hidden-480">编辑产品信息</span>

                </div>

            </div>
            <div class="portlet-body form">

                <div class="tabbable portlet-tabs">

                    <ul class="nav nav-tabs">

                        <li class="active"><a href="#portlet_tab1" data-toggle="tab">产品</a></li>

                    </ul>

                    <div class="tab-content">

                        <div class="tab-pane active" id="portlet_tab1">
                            <!-- BEGIN FORM-->
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                <form action="#" class="form-horizontal">
                                    <h4>产品</h4>
                                    <hr />
                                    @Html.ValidationSummary(true)
                                    @Html.HiddenFor(model => model.ID)
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.Org_ID, "所属机构：", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="controls">
                                            @Html.DropDownListFor(model => model.Org_ID, new DAL.Organization().GetDropdownlistItemwithid(Convert.ToInt32(Model.Org_ID)))
                                            <span class="help-inline"></span>
                                        </div>
                                    </div>
                                    <div class="control-group">

                                        @Html.LabelFor(model => model.Name, "产品名称", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Name, new { @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.Name)
                                        </div>

                                    </div>
                                    <div class="control-group">

                                        @Html.LabelFor(model => model.Abbr, "产品缩写", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Abbr, new { @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.Abbr)
                                        </div>

                                    </div>
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.Prod_Category, "产品类别：", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="controls">
                                            <select id="subCategory" name="subCategory" onchange="GetChildren(this.value)">
                                                @{
                                var listSub = new DAL.Pro_Category().GetListSub();
                                if (listSub != null && listSub.Count > 0)
                                {
                                    foreach (var m in listSub)
                                    {
                                        if (ViewBag.subID == m.ID)
                                        {
                                            <option value="@m.ID" selected>@m.Description</option>
                                        }
                                        else
                                        {
                                            <option value="@m.ID">@m.Description</option>
                                        }
                                    }
                                }
                                                }
                                            </select>
                                            <select id="Prod_Category" name="Prod_Category">
                                                @{
                                var listChildren = new DAL.Pro_Category().GetListChildren(ViewBag.subID);
                                if (listChildren != null && listChildren.Count > 0)
                                {
                                    foreach (var m in listChildren)
                                    {
                                        if ((int)Model.Prod_Category == m.ID)
                                        {
                                            <option value="@m.ID" selected>@m.Description</option>
                                        }
                                        else
                                        {
                                            <option value="@m.ID">@m.Description</option>
                                        }
                                    }
                                }
                                                }
                                            </select>
                                        </div>
                                    </div>


                                    <div class="control-group hidden">
                                        @Html.LabelFor(model => model.Class, "产品等级", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <input id="Class" name="Class" class="uneditable-input hidden" readonly="readonly" type="text" value="@Model.Class" />
                                        </div>
                                    </div>

                                    <div class="control-group hidden">
                                        @Html.LabelFor(model => model.Spec, "产品规格", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <input id="Spec" name="Spec" class="uneditable-input hidden" readonly="readonly" type="text" value="@Model.Spec" />


                                        </div>
                                    </div>

                                    <div class="control-group hidden">
                                        @Html.LabelFor(model => model.Unit, "产品单位", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <input id="Unit" name="Unit" class="uneditable-input hidden" readonly="readonly" type="text" value="@Model.Unit" />

                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.material, "主副原料", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.material)
                                            @Html.ValidationMessageFor(model => model.material)
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.Company, "生产机构", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.Company, new DAL.Organization().GetDropdownlistItemwithid(Convert.ToInt32(Model.Company)))
                                            @Html.ValidationMessageFor(model => model.Company)
                                        </div>
                                    </div>

                                    <div class="control-group hidden">
                                        @Html.LabelFor(model => model.NET, "净重", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <input id="NET" name="NET" class="uneditable-input hidden" readonly="readonly" type="text" value="@Model.NET" />
                                        </div>
                                    </div>

                                    <div class="control-group hidden">
                                        @Html.LabelFor(model => model.Count, "数量或度量", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <input id="Count" name="Count" class="uneditable-input hidden" readonly="readonly" type="text" value="@Model.Count" />
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.Description, "产品描述", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <textarea id="Description" name="Description">@Model.Description</textarea>

                                            <script type="text/javascript">
                                                var editor = CKEDITOR.replace('Description');
                                                CKFinder.SetupCKEditor(editor, '/ckfinder/');

                                            </script>

                                            @Html.ValidationMessageFor(model => model.Description)
                                        </div>
                                    </div>

                                    <div class="control-group hidden">
                                        @Html.LabelFor(model => model.Adv_Code, "宣传码", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">

                                            <input id="Adv_Code" name="Adv_Code" type="text" readonly="readonly" class="uneditable-input" value="@Model.Adv_Code" />

                                            @Html.ValidationMessageFor(model => model.Adv_Code)
                                        </div>
                                    </div>
                                    <div class="control-group hidden">
                                        @*@Html.LabelFor(model => model.Max_SN, "当前最大码段", htmlAttributes: new { @class = "control-label col-md-2" })*@
                                        <div class="col-md-10">
                                            @{
                                if (Model.Max_SN != null)
                                {
                                    <input id="Max_SN" name="Max_SN" class="uneditable-input " readonly="readonly" type="text" value="@Model.Max_SN" />


                                }
                                else
                                {
                                    <input id="Max_SN" name="Max_SN" class="uneditable-input " readonly="readonly" type="hidden" value="0" />

                                }
                                            }

                                        </div>
                                    </div>
                                    <div class="control-group hidden">

                                        @Html.LabelFor(model => model.CodeScheme, "编码方案", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">

                                            <input id="CodeScheme" name="CodeScheme" type="text" class="uneditable-input hidden" readonly="readonly" value="@Model.CodeScheme" />


                                        </div>
                                    </div>
                                    <div class="control-group">


                                        @Html.LabelFor(model => model.Photo, "产品图片：", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="controls">

                                            <img id="stuPic" width="300" height="200" /><br>

                                            <input type="text" class="m-wrap small" id="Photo" name="Photo" value="@Model.Photo" />
                                            <input type="button" value=" 预览 " onclick="    Yulan();" /><input type="button" value=" 选择" onclick="BrowseServer('Photo');" />

                                        </div>

                                    </div>
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.EWMUrl, "产品宣传页面网址", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">

                                            <input id="EWMUrl" name="EWMUrl" type="text" value="@Model.EWMUrl" />
                                            全地址以‘http://’或者‘https://’开头
                                            @Html.ValidationMessageFor(model => model.EWMUrl)
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.BuyUrl, "电商购买页面网址", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">

                                            <input id="BuyUrl" name="BuyUrl" type="text" value="@Model.BuyUrl" />
                                            全地址以‘http://’或者‘https://’开头
                                            @Html.ValidationMessageFor(model => model.BuyUrl)
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.VideoUrl, "实时视频播放地址", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">

                                            <input id="VideoUrl" name="VideoUrl" type="text" value="@Model.VideoUrl" />
                                            全地址以‘http://’或者‘https://’开头
                                            @Html.ValidationMessageFor(model => model.VideoUrl)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="保存" onclick="return CheckClick()" class="btn btn-default" />
                                        </div>
                                    </div>
                                </form>
                            }
                            <!-- END FORM-->
                        </div>

                    </div>

                </div>

            </div>

        </div>

        <!-- END SAMPLE FORM PORTLET-->


    </div>
</div>
<div>
    @Html.ActionLink("返回列表", "Index")
</div>
<script type="text/javascript">
    function GetZIP(obj) {

        document.getElementById("ZIPID").value = obj;
        if (obj != "*") {
            $.get("/ManageOrganizations/GetZIP?cid=" + obj, function (data, textStatus) {
                //alert("11");

                $.each(data, function () {
                    document.getElementById("ZIPID").value = this["ZIP"];
                });
                //$.get("/ManageUserPermissions/GetAllP?rid=" + BidCategory, function (data, textStatus) {
                //    $.each(data, function () {
                //        $("input[id='checkb_" + this['PermissionID'] + "']").attr("checked", true);
                //    });
                //});
            });
        }
    }
    function Shengcheng(obj) {

        document.getElementById("Org_Code").value = "i1" + obj + "-" + document.getElementById("ZIPID").value + document.getElementById("LSH").value;
    }
    function GetAddressShi(obj) {

        document.getElementById("shengID").value = obj;
        if (obj != "*") {
            $.get("/ManageOrganizations/GetP?cid=" + obj, function (data, textStatus) {
                //alert("11");


                var sid = document.getElementById("City");
                $("#City").empty();
                sid.options[sid.options.length] = new Option("---请选择---", "*");
                $.each(data, function () {
                    sid.options[sid.options.length] = new Option(this["Province"], this["ID"]);
                });
                //$.get("/ManageUserPermissions/GetAllP?rid=" + BidCategory, function (data, textStatus) {
                //    $.each(data, function () {
                //        $("input[id='checkb_" + this['PermissionID'] + "']").attr("checked", true);
                //    });
                //});
            });
        }
    }
    function GetXian(obj) {
        document.getElementById("shiID").value = obj;
        if (obj != "*") {
            $.get("/ManageOrganizations/GetP?cid=" + obj, function (data, textStatus) {
                //alert("11");

                var sid = document.getElementById("District");
                $("#District").empty();
                sid.options[sid.options.length] = new Option("---请选择---", "*");
                $.each(data, function () {
                    sid.options[sid.options.length] = new Option(this["Province"], this["ID"]);
                });
                //$.get("/ManageUserPermissions/GetAllP?rid=" + BidCategory, function (data, textStatus) {
                //    $.each(data, function () {
                //        $("input[id='checkb_" + this['PermissionID'] + "']").attr("checked", true);
                //    });
                //});
            });
        }

    }
    function CheckClick() {
        if (document.getElementById("Org_ID").value == "-1") {
            document.getElementById("Org_ID").focus();
            alert("请选择机构名称！");
            return false;
        }
        if (document.getElementById("Name").value == "") {
            document.getElementById("Name").focus();
            alert("请输入名称！");
            return false;
        }
        if (document.getElementById("Abbr").value == "") {
            document.getElementById("Abbr").focus();
            alert("请输入产品英文缩写！");
            return false;
        }
        if (document.getElementById("Company").value == "-1") {
            document.getElementById("Company").focus();
            alert("请选择生产机构！");
            return false;
        }
        if (document.getElementById("EWMUrl").value != "") {
            if (document.getElementById("EWMUrl").value.substring(0, 7) == "http://" || document.getElementById("EWMUrl").value.substring(0, 8) == "https://") {
            }
            else {
                document.getElementById("EWMUrl").focus();
                alert("产品宣传页面网址格式不正确！");
                return false;
            }
        }
        if (document.getElementById("BuyUrl").value != "") {
            if (document.getElementById("BuyUrl").value.substring(0, 7) == "http://" || document.getElementById("BuyUrl").value.substring(0, 8) == "https://") {
            }
            else {
                document.getElementById("BuyUrl").focus();
                alert("电商购买页面网址格式不正确！");
                return false;
            }
        }
        if (document.getElementById("VideoUrl").value != "") {
            if (document.getElementById("VideoUrl").value.substring(0, 7) == "http://" || document.getElementById("VideoUrl").value.substring(0, 8) == "https://") {
            }
            else {
                document.getElementById("VideoUrl").focus();
                alert("实时视频播放地址格式不正确！");
                return false;
            }
        }
        return true;
    }
    function BrowseServer(inputId) {
        var finder = new CKFinder();
        finder.basePath = '/ckfinder/'; //导入CKFinder的路径

        finder.selectActionFunction = SetFileField; //设置文件被选中时的函数
        finder.selectActionData = inputId; //接收地址的input ID
        finder.Width = 800;
        finder.Height = 600;
        finder.popup();


    }
    function Yulan() {
        $("#stuPic").attr("src", $("#Photo").val());
    }
    function SetFileField(fileUrl, data) {
        document.getElementById(data["selectActionData"]).value = fileUrl;
    }
    function GetChildren(obj) {
        $.get("/Public/GetChildren?subID=" + obj, function (data, textStatus) {
            var sid = document.getElementById("Prod_Category");
            $("#Prod_Category").empty();
            $.each(data, function () {
                sid.options[sid.options.length] = new Option(this["Description"], this["ID"]);
            });
        });
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}